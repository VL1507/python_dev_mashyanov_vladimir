; uv run alembic init -t async app\\migration\\migration_db2
; uv run alembic revision --autogenerate -m "Initial tables"
; uv run alembic upgrade head



[alembic]
script_location = app\\migration\\migration_db1
; script_location = app\\migration\\migration_db2

prepend_sys_path = .

# timezone =

# truncate_slug_length = 40

# revision_environment = false

# sourceless = false

# version_locations = %(here)s/bar:%(here)s/bat:app\\migration\\migration_db1/versions

# version_path_separator = :
# version_path_separator = ;
# version_path_separator = space
# version_path_separator = newline

version_path_separator = os


# recursive_version_locations = false


# output_encoding = utf-8

sqlalchemy.url = driver://user:pass@localhost/dbname


[post_write_hooks]

# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

; hooks = ruff
; ruff.type = exec
; ruff.executable = %(here)s/.venv/bin/ruff
; ruff.options = check --fix REVISION_SCRIPT_FILENAME

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
